[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[project]
name = "tap-npm"
version = "0.0.1"
description = "`tap-npm` is a Singer tap for NPM, built with the Meltano SDK for Singer Taps."
readme = "README.md"
keywords = [
  "ELT",
  "Meltano",
  "node",
  "npm",
  "singer.io",
]
license = "Apache-2.0"
maintainers = [{ name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" }]
authors = [{ name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" }]
requires-python = ">=3.8"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "python-dateutil",
  "requests",
  "singer-sdk~=0.40.0",
]
optional-dependencies.dev = [
  "tap-npm[testing,typing]",
]
optional-dependencies.testing = [
  "deptry>=0.12",
  "pytest>=7.4",
  "singer-sdk[testing]",
]
optional-dependencies.typing = [
  "mypy",
  "types-requests",
]
urls.documentation = "https://github.com/edgarrmondragon/tap-npm#readme"
urls.homepage = "https://github.com/edgarrmondragon/tap-npm"
urls.repository = "https://github.com/edgarrmondragon/tap-npm"
scripts.tap-npm = "tap_npm.tap:app"

[tool.hatch.envs.sync.scripts]
console = "tap-npm {args}"
jsonl = "tap-npm {args} > tap-npm.jsonl"

[tool.hatch.envs.test]
features = ["testing"]
[tool.hatch.envs.test.scripts]
integration = "pytest {args:tests}"
dependencies = "deptry ."

[tool.hatch.envs.all]
template = "test"
[[tool.hatch.envs.all.matrix]]
python = [
  "3.8",
  "3.9",
  "3.10",
  "3.11",
  "3.12",
  "3.13",
]

[tool.hatch.envs.typing]
features = ["testing", "typing"]
[tool.hatch.envs.typing.scripts]
check = "mypy --strict {args:tap_npm tests}"

[tool.ruff]
line-length = 88
src = ["tap_npm"]

[tool.ruff.lint]
ignore = [
  "ANN101",  # missing-type-self
  "DJ",      # flake8-django
  "FIX002",  # line-contains-todo
  "COM812",  # missing-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["tap_npm"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["ANN"]
"tests/*" = ["ANN", "S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.deptry.package_module_name_map]
mypy = "mypy"
tap-npm = "tap_npm"
types-requests = "types_requests"

[tool.deptry.per_rule_ignores]
DEP002 = [
  "deptry",
  "mypy",
  "pytest",
  "types-requests",
]

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
python_version = "3.12"
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = ["dateutil.*"]
